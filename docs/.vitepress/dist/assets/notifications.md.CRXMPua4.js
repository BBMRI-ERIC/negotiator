import{_ as a,c as i,a3 as t,o as s}from"./chunks/framework.D6X87co3.js";const m=JSON.parse('{"title":"Notification service","description":"","frontmatter":{},"headers":[],"relativePath":"notifications.md","filePath":"notifications.md","lastUpdated":1751450357000}'),n={name:"notifications.md"};function o(l,e,r,p,h,c){return s(),i("div",null,e[0]||(e[0]=[t(`<h1 id="notification-service" tabindex="-1">Notification service <a class="header-anchor" href="#notification-service" aria-label="Permalink to &quot;Notification service&quot;">​</a></h1><p>The negotiator features a notification service for notifying representatives, admins and researchers about various events tied to a Negotiation.</p><h2 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h2><p>Currently, it&#39;s implemented using <a href="https://docs.spring.io/spring-boot/docs/2.0.0.M3/reference/html/boot-features-email.html" target="_blank" rel="noreferrer">SpringMail</a>.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>To configure the Spring Mail, set the following environment variables or update the properties file for the appropriate profile:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SPRING_MAIL_HOST=&quot;smtp.example&quot;</span></span>
<span class="line"><span>SPRING_MAIL_PORT=1025</span></span>
<span class="line"><span>SPRING_MAIL_USERNAME=&quot;user&quot;</span></span>
<span class="line"><span>SPRING_MAIL_PASSWORD=&quot;pass&quot;</span></span></code></pre></div><h3 id="email-template" tabindex="-1">Email template <a class="header-anchor" href="#email-template" aria-label="Permalink to &quot;Email template&quot;">​</a></h3><p>Templates ensure consistent and automated communications for various functions. We are using <a href="https://www.thymeleaf.org/" target="_blank" rel="noreferrer">Thymeleaf</a> as the template engine, which allows us to create dynamic and customizable email content.</p><h4 id="template-location" tabindex="-1">Template location <a class="header-anchor" href="#template-location" aria-label="Permalink to &quot;Template location&quot;">​</a></h4><p>The email template is stored in the <code>src/main/resources/templates/</code> directory. It is written in HTML with Thymeleaf syntax, allowing you to include dynamic content using expressions, conditionals, and loops.</p><h4 id="editing-the-template" tabindex="-1">Editing the template <a class="header-anchor" href="#editing-the-template" aria-label="Permalink to &quot;Editing the template&quot;">​</a></h4><ul><li>To edit the template, open the <code>email-notification.html</code> file.</li><li>Make the necessary changes to the template. You can use Thymeleaf syntax to include dynamic variables, iterate over data collections, or conditionally display content.</li><li>Save the changes to the file.</li><li>The template is now ready to be used in the email service.</li></ul><h5 id="upload-new-template-to-a-docker-container" tabindex="-1">Upload new template to a docker container <a class="header-anchor" href="#upload-new-template-to-a-docker-container" aria-label="Permalink to &quot;Upload new template to a docker container&quot;">​</a></h5><p>To upload a new template to a docker container, you can use the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main/resources/templates/email-notification.html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> negotiator:/app/src/main/resources/templates/email-notification.html</span></span></code></pre></div><p>Or when using docker-compose mount the volume to the container:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./src/main/resources/templates/email-notification.html:/app/src/main/resources/templates/email-notification.html</span></span></code></pre></div><h4 id="template-variables" tabindex="-1">Template variables <a class="header-anchor" href="#template-variables" aria-label="Permalink to &quot;Template variables&quot;">​</a></h4><p>The email template uses variables to include dynamic content. These variables are replaced with actual values when the email is sent. The following variables are available in the template:</p><ul><li><code>recipient</code>: The name of the recipient.</li><li><code>frontendUrl</code>: The URL of the frontend application.</li><li><code>negotiations</code>: List of negotiation Ids.</li><li><code>roleForNegotiation</code>: List of roles for each negotiation.</li><li><code>titleForNegotiation</code>: List of titles for each negotiation.</li><li><code>notificationsForNegotiation</code>: List of notifications for each negotiation.</li><li><code>emailYoursSincerelyText</code>: The text for the &quot;Yours sincerely&quot; section.</li><li><code>emailHelpdeskHref</code>: The URL for the helpdesk.</li></ul><h4 id="updating-templates-at-runtime" tabindex="-1">Updating Templates at Runtime <a class="header-anchor" href="#updating-templates-at-runtime" aria-label="Permalink to &quot;Updating Templates at Runtime&quot;">​</a></h4><p>The Negotiator provides an <a href="./REST">REST</a> endpoint to update the email template at runtime. This is only enabled when the spring.thymeleaf.prefix is set in the <code>application.yml</code> file e.g.:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  thymeleaf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">file:resources/templates/</span></span></code></pre></div><p>Email templates used for system notifications can be managed via the admin UI. Admin users can update existing templates or reset them to default without restarting the application. No new templates can be added or deleted.</p><h3 id="email-reminder" tabindex="-1">Email reminder <a class="header-anchor" href="#email-reminder" aria-label="Permalink to &quot;Email reminder&quot;">​</a></h3><p>Automates the sending of emails based on schedules. The email reminder service is implemented using <a href="https://spring.io/guides/gs/scheduling-tasks/" target="_blank" rel="noreferrer">Spring&#39;s Task Execution and Scheduling</a>. The reminder service is configured in the <code>application-prod.yml</code> file.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">reminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  trigger-duration-days</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;P7D&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cron-schedule-expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0 0 0 * * TUE&quot;</span></span></code></pre></div><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><p>For development, we advise to use a service called <a href="https://github.com/mailhog/MailHog" target="_blank" rel="noreferrer">Mailhog</a>. It serves to test sending email messages and acts as a mock smtp server. For setup, follow the instructions mentioned in their documentation.</p>`,30)]))}const u=a(n,[["render",o]]);export{m as __pageData,u as default};
